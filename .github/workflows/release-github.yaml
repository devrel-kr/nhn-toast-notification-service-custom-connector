name: Release to GitHub

on:
  push:
    tags:
    - 'v*'

env:
  SMS_PUBLISH_PATH: src/NhnToast.Sms/bin/Release/net6.0/publish/
  SMS_VERIFICATION_PUBLISH_PATH: src/NhnToast.Sms.Verification/bin/Release/net6.0/publish/
  SMS_PUBLISH_NAME: SmsApp
  SMS_VERIFICATION_PUBLISH_NAME: SmsVerificationApp

jobs:
  Continuous-Integration:
    runs-on: ubuntu-latest

    steps:
    - name: Extract version from tag
      shell: pwsh
      run: |
        $version = (echo ${{ github.ref }}) -replace "refs/tags/", ""

        echo "RELEASE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Check environment variables
      shell: bash
      run: |
        echo ${{ env.RELEASE_VERSION }}

    - name: Checkout the repo
      uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.x

    - name: Restore NuGet packages
      shell: bash
      run: |
        dotnet restore .

    - name: Copy test.settings.json for tests
      shell: pwsh
      run: |
        Copy-Item -Path test/NhnToast.Sms.Tests/test.settings.sample.json -Destination test/NhnToast.Sms.Tests/test.settings.json -Force

        (Get-Content -Path test/NhnToast.Sms.Tests/test.settings.json) `
          -replace "{{appKey}}", "${{ secrets.TOAST_APPKEY }}" `
          -replace "{{secretKey}}", "${{ secrets.TOAST_SECRETKEY }}" `
          -replace "{{requestId}}", "${{ secrets.REQUEST_ID }}" `
          -replace "{{sendNo}}", "${{ secrets.SENDER_NO }}" `
          -replace "{{recipientNo}}", "${{ secrets.RECIPIENT_NO }}" `
          | Set-Content -Path test/NhnToast.Sms.Tests/test.settings.json -Force

        Copy-Item -Path test/NhnToast.Sms.Verification.Tests/test.settings.sample.json -Destination test/NhnToast.Sms.Verification.Tests/test.settings.json -Force

        (Get-Content -Path test/NhnToast.Sms.Verification.Tests/test.settings.json) `
          -replace "{{appKey}}", "${{ secrets.TOAST_APPKEY }}" `
          -replace "{{secretKey}}", "${{ secrets.TOAST_SECRETKEY }}" `
          | Set-Content -Path test/NhnToast.Sms.Verification.Tests/test.settings.json -Force

    - name: Build solution
      shell: bash
      run: |
        dotnet build . -c Release

    - name: Test solution
      shell: bash
      run: |
        dotnet test . -c Release

    - name: Create FunctionApp artifact
      shell: bash
      run: |
        dotnet publish -c Release
    
    - name: Upload SMS app artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.SMS_PUBLISH_NAME }}
        path: ${{ github.workspace }}/${{ env.SMS_PUBLISH_PATH }}
        retention-days: 7
        
    - name: Upload SMS Verification artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.SMS_VERIFICATION_PUBLISH_NAME }}
        path: ${{ github.workspace }}/${{ env.SMS_VERIFICATION_PUBLISH_PATH }}
        retention-days: 7
        
    - name: Upload release notes
      uses: actions/upload-artifact@v2
      with:
        name: release-notes
        path: ${{ github.workspace }}/release-notes
        retention-days: 7

  Continuous-Deployment:
    runs-on: ubuntu-latest
    needs: Continuous-Integration

    steps:
    - name: Extract version from tag
      shell: pwsh
      run: |
        $version = (echo ${{ github.ref }}) -replace "refs/tags/", ""

        echo "RELEASE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Check environment variables
      shell: bash
      run: |
        echo ${{ env.RELEASE_VERSION }}

    - name: Download FunctionApp artifacts
      uses: actions/download-artifact@v3

    - name: Zip FunctionApp artifacts
      run: |
          cd ${{env.SMS_PUBLISH_NAME}}
          zip ${{env.SMS_PUBLISH_NAME}}.zip ./* -r
          cd ${{ github.workspace }}

          cd ${{env.SMS_VERIFICATION_PUBLISH_NAME}}
          zip ${{env.SMS_VERIFICATION_PUBLISH_NAME}}.zip ./* -r
          cd ${{ github.workspace }}

          mkdir published
          mv ${{env.SMS_PUBLISH_NAME}}/${{env.SMS_PUBLISH_NAME}}.zip published/${{env.SMS_PUBLISH_NAME}}-${{ env.RELEASE_VERSION }}.zip
          mv ${{env.SMS_VERIFICATION_PUBLISH_NAME}}/${{env.SMS_VERIFICATION_PUBLISH_NAME}}.zip published/${{env.SMS_VERIFICATION_PUBLISH_NAME}}-${{ env.RELEASE_VERSION }}.zip

    - name: Release FunctionApp artifacts to GitHub
      uses: softprops/action-gh-release@v1
      with:
        prerelease: false
        name: Release ${{ env.RELEASE_VERSION }}
        body_path: ${{ github.workspace }}/release-notes/${{ env.RELEASE_VERSION }}.md
        generate_release_notes: true
        files: |
          published/${{env.SMS_PUBLISH_NAME}}-${{ env.RELEASE_VERSION }}.zip
          published/${{env.SMS_VERIFICATION_PUBLISH_NAME}}-${{ env.RELEASE_VERSION }}.zip
