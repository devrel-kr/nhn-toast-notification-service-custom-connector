name: Continuous Deployment

on:
  workflow_call:
    inputs:
      action_name:
        type: string
        required: true
      tag:
        type: string
        required: false
        default: ""
    secrets:
      AZURE_CREDENTIALS:
        required: false
      AZURE_ENVIRONMENT_CODE:
        required: false
      AZURE_LOCATION_CODE:
        required: false
      AZURE_RESOURCE_NAME:
        required: false

env:
  SMS_PUBLISH_PATH: src/NhnToast.Sms/bin/Release/net6.0/publish/
  SMS_VERIFICATION_PUBLISH_PATH: src/NhnToast.Sms.Verification/bin/Release/net6.0/publish/
  SMS_PUBLISH_NAME: SmsApp
  SMS_VERIFICATION_PUBLISH_NAME: SmsVerificationApp

  AZURE_RESOURCE_GROUP_NAME: 'rg-${{ secrets.AZURE_RESOURCE_NAME }}-${{ secrets.AZURE_ENVIRONMENT_CODE }}-${{ secrets.AZURE_LOCATION_CODE }}'
  AZURE_FUNCTION_APP_SMS_NAME: 'fncapp-${{ secrets.AZURE_RESOURCE_NAME }}-sms-${{ secrets.AZURE_ENVIRONMENT_CODE }}-${{ secrets.AZURE_LOCATION_CODE }}'
  AZURE_FUNCTION_APP_SMS_VERIFICATION_NAME: 'fncapp-${{ secrets.AZURE_RESOURCE_NAME }}-sms-verify-${{ secrets.AZURE_ENVIRONMENT_CODE }}-${{ secrets.AZURE_LOCATION_CODE }}'

jobs:
  Continuous-Deployment:
    runs-on: ubuntu-latest

    steps:
    - name: Extract version from tag
      if: ${{ endsWith(inputs.action_name, 'github') }}    
      shell: pwsh
      run: |
        $version = (echo ${{ inputs.tag }}) -replace "refs/tags/", ""

        echo "RELEASE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Check environment variables
      if: ${{ endsWith(inputs.action_name, 'github') }}    
      shell: bash
      run: |
        echo ${{ env.RELEASE_VERSION }}

    - name: Checkout the repo
      uses: actions/checkout@v2  
    
    - name: Download FunctionApp artifacts
      uses: actions/download-artifact@v3

    - name: Zip FunctionApp artifacts
      run: |
        cd ${{env.SMS_PUBLISH_NAME}}
        zip ${{env.SMS_PUBLISH_NAME}}.zip ./* -r
        cd ${{ github.workspace }}

        cd ${{env.SMS_VERIFICATION_PUBLISH_NAME}}
        zip ${{env.SMS_VERIFICATION_PUBLISH_NAME}}.zip ./* -r
        cd ${{ github.workspace }}

        mkdir published
        mv ${{env.SMS_PUBLISH_NAME}}/${{env.SMS_PUBLISH_NAME}}.zip published/${{env.SMS_PUBLISH_NAME}}.zip
        mv ${{env.SMS_VERIFICATION_PUBLISH_NAME}}/${{env.SMS_VERIFICATION_PUBLISH_NAME}}.zip published/${{env.SMS_VERIFICATION_PUBLISH_NAME}}.zip
      
    - name: Add release-version to zip
      if: ${{ endsWith(inputs.action_name, 'github') }}    
      run: |
        mv published/${{env.SMS_PUBLISH_NAME}}.zip published/${{env.SMS_PUBLISH_NAME}}-${{ env.RELEASE_VERSION }}.zip
        mv published/${{env.SMS_VERIFICATION_PUBLISH_NAME}}.zip published/${{env.SMS_VERIFICATION_PUBLISH_NAME}}-${{ env.RELEASE_VERSION }}.zip

    - name: Release FunctionApp artifacts to GitHub
      if: ${{ endsWith(inputs.action_name, 'github') }}
      uses: softprops/action-gh-release@v1
      with:
        prerelease: false
        name: Release ${{ env.RELEASE_VERSION }}
        body_path: ${{ github.workspace }}/release-notes/${{ env.RELEASE_VERSION }}.md
        generate_release_notes: true
        files: |
          published/${{env.SMS_PUBLISH_NAME}}-${{ env.RELEASE_VERSION }}.zip
          published/${{env.SMS_VERIFICATION_PUBLISH_NAME}}-${{ env.RELEASE_VERSION }}.zip

    - name: Sign in to Azure
      if: ${{ endsWith(inputs.action_name, 'azure') }}
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy FunctionApp artifacts to Azure
      if: ${{ endsWith(inputs.action_name, 'azure') }}
      shell: bash
      run: |
        az functionapp deploy \
          -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
          -n ${{ env.AZURE_FUNCTION_APP_SMS_NAME }} \
          --src-path published/${{env.SMS_PUBLISH_NAME}}.zip \
          --type zip \
          --verbose

        az functionapp deploy \
          -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
          -n ${{ env.AZURE_FUNCTION_APP_SMS_VERIFICATION_NAME }} \
          --src-path published/${{env.SMS_VERIFICATION_PUBLISH_NAME}}.zip \
          --type zip \
          --verbose
