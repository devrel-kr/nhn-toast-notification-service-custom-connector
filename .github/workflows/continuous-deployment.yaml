name: Continuous Deployment

on:
  workflow_call:
    inputs:
      action_name:
        type: string
        required: true
      function_apps:
        required: true
        type: string
        default: '{"include":[{"src-path":"Sms","fncapp-name":"sms"},{"src-path":"Sms.Verification","fncapp-name":"sms-verify"}]}'
        description: function-app name and source-folder name array, format of a string JSON array
      tag:
        type: string
        required: false
        default: ""
    secrets:
      TOKEN:
        required: false
      AZURE_CREDENTIALS:
        required: false
      AZURE_ENVIRONMENT_CODE:
        required: false
      AZURE_LOCATION_CODE:
        required: false
      AZURE_RESOURCE_NAME:
        required: false

env:
  AZURE_RESOURCE_GROUP_NAME: 'rg-${{ secrets.AZURE_RESOURCE_NAME }}-${{ secrets.AZURE_ENVIRONMENT_CODE }}-${{ secrets.AZURE_LOCATION_CODE }}'

jobs:
  Pre-Work:
    runs-on: ubuntu-latest

    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2
      
    - name: Extract version from tag
      if: ${{ endsWith(inputs.action_name, 'github') }}    
      shell: pwsh
      run: |
        $version = (echo ${{ inputs.tag }}) -replace "refs/tags/", ""

        echo "RELEASE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Create a GitHub release
      id: create_release
      if: ${{ endsWith(inputs.action_name, 'github') }}
      uses: softprops/action-gh-release@v1
      with:
        prerelease: false
        name: Release ${{ env.RELEASE_VERSION }}
        body_path: ${{ github.workspace }}/release-notes/${{ env.RELEASE_VERSION }}.md
        generate_release_notes: true
  
  Continuous-Deployment:
    needs: 
    - Pre-Work
    strategy:
      matrix: ${{ fromJson(inputs.function_apps) }}

    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2

    - name: Download FunctionApp artifacts
      uses: actions/download-artifact@v3

    - name: Set azure-function-app name
      shell: pwsh
      run: |
        $name = 'fncapp-${{ secrets.AZURE_RESOURCE_NAME }}-${{ matrix.fncapp-name }}-${{ secrets.AZURE_ENVIRONMENT_CODE }}-${{ secrets.AZURE_LOCATION_CODE }}'

        echo "AZURE_FUNCTION_APP_NAME=$name" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Zip FunctionApp artifacts
      run: |
        cd ${{matrix.fncapp-name}}
        zip ${{matrix.src_path}}.zip ./* -r
        cd ${{ github.workspace }}

        mkdir published
        mv ${{matrix.fncapp-name}}/${{matrix.src_path}}.zip published/${{matrix.src_path}}.zip

    - name: Extract version from tag
      if: ${{ endsWith(inputs.action_name, 'github') }}    
      shell: pwsh
      run: |
        $version = (echo ${{ inputs.tag }}) -replace "refs/tags/", ""

        echo "RELEASE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
      
    - name: Add release-version to zip
      if: ${{ endsWith(inputs.action_name, 'github') }}    
      run: |
        mv published/${{matrix.src_path}}.zip published/${{matrix.src_path}}-${{ env.RELEASE_VERSION }}.zip
  
    - name: Release FunctionApp artifact to GitHub
      if: ${{ endsWith(inputs.action_name, 'github') }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ needs.Pre-Work.outputs.release_url }}
        asset_path: published/${{matrix.src_path}}-${{ env.RELEASE_VERSION }}.zip
        asset_name: ${{matrix.src_path}}-${{ env.RELEASE_VERSION }}.zip
        asset_content_type: application/gzip

    - name: Sign in to Azure
      if: ${{ endsWith(inputs.action_name, 'azure') }}
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy FunctionApp artifact to Azure
      if: ${{ endsWith(inputs.action_name, 'azure') }}
      shell: bash
      run: |
        az functionapp deploy \
          -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
          -n ${{ env.AZURE_FUNCTION_APP_NAME }} \
          --src-path published/${{matrix.src_path}}.zip \
          --type zip \
          --verbose
