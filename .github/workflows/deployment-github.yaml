name: Release to GitHub

on:
  workflow_call:
    inputs:
      gh_tag:
        type: string
        required: true
      matrix_json:
        type: string
        required: true
        description: function app names in the format of JSON string array

jobs:
  deploy_github:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2

    - name: Extract version from tag
      shell: pwsh
      run: |
        $version = (echo ${{ inputs.gh_tag }}) -replace "refs/tags/", ""

        echo "RELEASE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Download Function app artifacts
      uses: actions/download-artifact@v3

    - name: Zip Function app artifacts
      shell: pwsh
      run: |
        mkdir published

        $matrix = "${{ inputs.matrix_json }}" | ConvertFrom-Json

        $is_first = $true
        $version = "$env:RELEASE_VERSION"

        $matrix | ForEach-Object { 
            $fncapp_name = $_
            $destination_path = "published/$($fncapp_name)-$($version).zip"

            Compress-Archive -Path $fncapp_name/* -DestinationPath $destination_path

            if ($is_first) {
                $fncapp_paths = $destination_path
                $is_first = $false
            } else {
                $fncapp_paths = $fncapp_paths + "`r`n" + $destination_path
            }
        }

        echo "FNCAPP_PATHS<<EOF" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
        echo "$fncapp_paths" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
        echo "EOF" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
  
    - name: Release Function app artifacts to GitHub
      uses: softprops/action-gh-release@v1
      with:
        prerelease: false
        name: Release ${{ env.RELEASE_VERSION }}
        body_path: ${{ github.workspace }}/release-notes/${{ env.RELEASE_VERSION }}.md
        generate_release_notes: true
        files: |
          ${{ env.FNCAPP_PATHS }}
