name: Continuous Deployment

on:
  workflow_call:
    inputs:
      matrix_json:
        required: true
        type: string
        description: function-app name and source-folder name array, format of a string JSON array
      tag:
        type: string
        required: true
    secrets:
      GH_TOKEN:
        required: true

jobs:
  Pre-Work:
    runs-on: ubuntu-latest

    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2
      
    - name: Extract version from tag
      shell: pwsh
      run: |
        $version = (echo ${{ inputs.tag }}) -replace "refs/tags/", ""

        echo "RELEASE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Create a GitHub release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        prerelease: false
        name: Release ${{ env.RELEASE_VERSION }}
        body_path: ${{ github.workspace }}/release-notes/${{ env.RELEASE_VERSION }}.md
        generate_release_notes: true
  
  Continuous-Deployment-Github:
    needs: 
    - Pre-Work
    strategy:
      matrix: ${{ fromJson(inputs.matrix_json) }}

    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2

    - name: Extract version from tag
      shell: pwsh
      run: |
        $version = (echo ${{ inputs.tag }}) -replace "refs/tags/", ""

        echo "RELEASE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Download FunctionApp artifacts
      uses: actions/download-artifact@v3

    - name: Zip FunctionApp artifacts
      run: |
        cd ${{matrix.fncapp-name}}
        zip ${{matrix.src-path}}.zip ./* -r
        cd ${{ github.workspace }}

        mkdir published
        mv ${{matrix.fncapp-name}}/${{matrix.src-path}}.zip published/${{matrix.src-path}}.zip

    - name: Add release-version to zip
      run: |
        mv published/${{matrix.src-path}}.zip published/${{matrix.src-path}}-${{ env.RELEASE_VERSION }}.zip
  
    - name: Release FunctionApp artifact to GitHub
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ needs.Pre-Work.outputs.release_url }}
        asset_path: published/${{matrix.src-path}}-${{ env.RELEASE_VERSION }}.zip
        asset_name: ${{matrix.src-path}}-${{ env.RELEASE_VERSION }}.zip
        asset_content_type: application/gzip
