name: Continuous Integration


on:
  workflow_call:
    inputs:
      action_name:
        required: true
        type: string
      function_apps:
        required: false
        type: string
        default: '["Sms", "Sms.Verification"]'
        description: function-app name array, format of a string JSON array


env:

jobs:
  Continuous-Integration:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.x

    - name: Restore NuGet packages
      shell: bash
      run: |
        dotnet restore .

    - name: Copy test.settings.json for tests
      shell: pwsh
      run: |
        Copy-Item -Path test/NhnToast.Sms.Tests/test.settings.sample.json -Destination test/NhnToast.Sms.Tests/test.settings.json -Force

        (Get-Content -Path test/NhnToast.Sms.Tests/test.settings.json) `
          -replace "{{appKey}}", "${{ secrets.TOAST_APPKEY }}" `
          -replace "{{secretKey}}", "${{ secrets.TOAST_SECRETKEY }}" `
          -replace "{{requestId}}", "${{ secrets.REQUEST_ID }}" `
          -replace "{{sendNo}}", "${{ secrets.SENDER_NO }}" `
          -replace "{{recipientNo}}", "${{ secrets.RECIPIENT_NO }}" `
          | Set-Content -Path test/NhnToast.Sms.Tests/test.settings.json -Force

        Copy-Item -Path test/NhnToast.Sms.Verification.Tests/test.settings.sample.json -Destination test/NhnToast.Sms.Verification.Tests/test.settings.json -Force

        (Get-Content -Path test/NhnToast.Sms.Verification.Tests/test.settings.json) `
          -replace "{{appKey}}", "${{ secrets.TOAST_APPKEY }}" `
          -replace "{{secretKey}}", "${{ secrets.TOAST_SECRETKEY }}" `
          | Set-Content -Path test/NhnToast.Sms.Verification.Tests/test.settings.json -Force

    - name: Build solution
      shell: bash
      run: |
        dotnet build . -c Release

    - name: Test solution
      shell: bash
      run: |
        dotnet test . -c Release --filter:"TestCategory!=Integration"

    - name: Create FunctionApp artifact
      if: ${{ startsWith(inputs.action_name, 'release') }}
      shell: bash
      run: |
        dotnet publish -c Release

    - name: Upload release notes
      if: ${{ startsWith(inputs.action_name, 'release') }}
      uses: actions/upload-artifact@v2
      with:
        name: release-notes
        path: ${{ github.workspace }}/release-notes
        retention-days: 7

  Upload-App:
    if: ${{ startsWith(inputs.action_name, 'release') }}
    needs: 
    - Continuous-Integration
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        app-name: ${{ fromJson(inputs.function_apps) }}

    - name: Add function-app path to env
      shell: pwsh
      run: |
        $path = "src/NhnToast.${{ matrix.app-name }}/bin/Release/net6.0/publish/"

        echo "APP_PATH=$path" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Upload app artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.app-name }}
        path: ${{ github.workspace }}/${{ env.APP_PATH }}
        retention-days: 7
       
