{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.6.1.6515",
      "templateHash": "11457232040111622760"
    }
  },
  "parameters": {
    "name": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "env": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "prod",
        "kdy",
        "kms",
        "lsw",
        "pjm"
      ]
    },
    "apiMgmtNameValueName": {
      "type": "string"
    },
    "apiMgmtNameValueDisplayName": {
      "type": "string"
    },
    "apiMgmtNameValueValue": {
      "type": "secureString"
    },
    "apiMgmtApiType": {
      "type": "string",
      "defaultValue": "http",
      "allowedValues": [
        "http",
        "soap",
        "websocket",
        "graphql"
      ]
    },
    "apiMgmtApiName": {
      "type": "string"
    },
    "apiMgmtApiDisplayName": {
      "type": "string"
    },
    "apiMgmtApiDescription": {
      "type": "string"
    },
    "apiMgmtApiPath": {
      "type": "string"
    },
    "apiMgmtApiSubscriptionRequired": {
      "type": "bool",
      "defaultValue": false
    },
    "apiMgmtApiFormat": {
      "type": "string",
      "defaultValue": "openapi+json-link",
      "allowedValues": [
        "swagger-json",
        "swagger-link-json",
        "openapi",
        "openapi+json",
        "openapi+json-link",
        "openapi-link",
        "wadl-link-json",
        "wadl-xml",
        "wsdl",
        "wsdl-link",
        "graphql-link"
      ]
    },
    "apiMgmtApiValue": {
      "type": "string"
    },
    "apiMgmtApiPolicyFormat": {
      "type": "string",
      "defaultValue": "xml",
      "allowedValues": [
        "rawxml",
        "rawxml-link",
        "xml",
        "xml-link"
      ]
    },
    "apiMgmtApiPolicyValue": {
      "type": "string",
      "defaultValue": "<!--\r\n  IMPORTANT:\r\n  - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n  - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n  - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n  - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n  - To remove a policy, delete the corresponding policy statement from the policy document.\r\n  - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n  - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n  - Policies are applied in the order of their appearance, from the top down.\r\n  - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>"
    },
    "apiMgmtProductName": {
      "type": "string",
      "defaultValue": "default"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "ApiManagementApi",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('name')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "env": {
            "value": "[parameters('env')]"
          },
          "apiMgmtNameValueName": {
            "value": "[parameters('apiMgmtNameValueName')]"
          },
          "apiMgmtNameValueDisplayName": {
            "value": "[parameters('apiMgmtNameValueDisplayName')]"
          },
          "apiMgmtNameValueValue": {
            "value": "[parameters('apiMgmtNameValueValue')]"
          },
          "apiMgmtApiType": {
            "value": "[parameters('apiMgmtApiType')]"
          },
          "apiMgmtApiName": {
            "value": "[parameters('apiMgmtApiName')]"
          },
          "apiMgmtApiDisplayName": {
            "value": "[parameters('apiMgmtApiDisplayName')]"
          },
          "apiMgmtApiDescription": {
            "value": "[parameters('apiMgmtApiDescription')]"
          },
          "apiMgmtApiPath": {
            "value": "[parameters('apiMgmtApiPath')]"
          },
          "apiMgmtApiSubscriptionRequired": {
            "value": "[parameters('apiMgmtApiSubscriptionRequired')]"
          },
          "apiMgmtApiFormat": {
            "value": "[parameters('apiMgmtApiFormat')]"
          },
          "apiMgmtApiValue": {
            "value": "[parameters('apiMgmtApiValue')]"
          },
          "apiMgmtApiPolicyFormat": {
            "value": "[parameters('apiMgmtApiPolicyFormat')]"
          },
          "apiMgmtApiPolicyValue": {
            "value": "[parameters('apiMgmtApiPolicyValue')]"
          },
          "apiMgmtProductName": {
            "value": "[parameters('apiMgmtProductName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.1.6515",
              "templateHash": "13609194329212810660"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "env": {
              "type": "string",
              "defaultValue": "dev",
              "allowedValues": [
                "dev",
                "test",
                "prod",
                "kdy",
                "kms",
                "lsw",
                "pjm"
              ]
            },
            "apiMgmtNameValueName": {
              "type": "string"
            },
            "apiMgmtNameValueDisplayName": {
              "type": "string"
            },
            "apiMgmtNameValueValue": {
              "type": "secureString"
            },
            "apiMgmtApiType": {
              "type": "string",
              "defaultValue": "http",
              "allowedValues": [
                "http",
                "soap",
                "websocket",
                "graphql"
              ]
            },
            "apiMgmtApiName": {
              "type": "string"
            },
            "apiMgmtApiDisplayName": {
              "type": "string"
            },
            "apiMgmtApiDescription": {
              "type": "string"
            },
            "apiMgmtApiPath": {
              "type": "string"
            },
            "apiMgmtApiSubscriptionRequired": {
              "type": "bool",
              "defaultValue": false
            },
            "apiMgmtApiFormat": {
              "type": "string",
              "defaultValue": "openapi+json-link",
              "allowedValues": [
                "swagger-json",
                "swagger-link-json",
                "openapi",
                "openapi+json",
                "openapi+json-link",
                "openapi-link",
                "wadl-link-json",
                "wadl-xml",
                "wsdl",
                "wsdl-link",
                "graphql-link"
              ]
            },
            "apiMgmtApiValue": {
              "type": "string"
            },
            "apiMgmtApiPolicyFormat": {
              "type": "string",
              "defaultValue": "xml",
              "allowedValues": [
                "rawxml",
                "rawxml-link",
                "xml",
                "xml-link"
              ]
            },
            "apiMgmtApiPolicyValue": {
              "type": "string",
              "defaultValue": "<!--\r\n  IMPORTANT:\r\n  - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n  - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n  - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n  - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n  - To remove a policy, delete the corresponding policy statement from the policy document.\r\n  - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n  - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n  - Policies are applied in the order of their appearance, from the top down.\r\n  - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>"
            },
            "apiMgmtProductName": {
              "type": "string",
              "defaultValue": "default"
            }
          },
          "variables": {
            "locationCodeMap": {
              "australiacentral": "auc",
              "Australia Central": "auc",
              "australiaeast": "aue",
              "Australia East": "aue",
              "australiasoutheast": "ause",
              "Australia Southeast": "ause",
              "brazilsouth": "brs",
              "Brazil South": "brs",
              "canadacentral": "cac",
              "Canada Central": "cac",
              "canadaeast": "cae",
              "Canada East": "cae",
              "centralindia": "cin",
              "Central India": "cin",
              "centralus": "cus",
              "Central US": "cus",
              "eastasia": "ea",
              "East Asia": "ea",
              "eastus": "eus",
              "East US": "eus",
              "eastus2": "eus2",
              "East US 2": "eus2",
              "francecentral": "frc",
              "France Central": "frc",
              "germanywestcentral": "dewc",
              "Germany West Central": "dewc",
              "japaneast": "jpe",
              "Japan East": "jpe",
              "japanwest": "jpw",
              "Japan West": "jpw",
              "jioindianorthwest": "jinw",
              "Jio India North West": "jinw",
              "koreacentral": "krc",
              "Korea Central": "krc",
              "koreasouth": "krs",
              "Korea South": "krs",
              "northcentralus": "ncus",
              "North Central US": "ncus",
              "northeurope": "neu",
              "North Europe": "neu",
              "norwayeast": "noe",
              "Norway East": "noe",
              "southafricanorth": "zan",
              "South Africa North": "zan",
              "southcentralus": "scus",
              "South Central US": "scus",
              "southindia": "sin",
              "South India": "sin",
              "southeastasia": "sea",
              "Southeast Asia": "sea",
              "swedencentral": "sec",
              "Sweden Central": "sec",
              "switzerlandnorth": "chn",
              "Switzerland North": "chn",
              "uaenorth": "uaen",
              "UAE North": "uaen",
              "uksouth": "uks",
              "UK South": "uks",
              "ukwest": "ukw",
              "UK West": "ukw",
              "westcentralus": "wcus",
              "West Central US": "wcus",
              "westeurope": "weu",
              "West Europe": "weu",
              "westindia": "win",
              "West India": "win",
              "westus": "wus",
              "West US": "wus",
              "westus2": "wus2",
              "West US 2": "wus2",
              "westus3": "wus3",
              "West US 3": "wus3"
            },
            "locationCode": "[variables('locationCodeMap')[parameters('location')]]",
            "metadata": {
              "longName": "[format('{{0}}-{0}-{1}-{2}', parameters('name'), parameters('env'), variables('locationCode'))]",
              "shortName": "[replace(format('{{0}}{0}{{1}}{1}{2}', parameters('name'), parameters('env'), variables('locationCode')), '-', '')]"
            },
            "apiManagement": {
              "groupName": "[format(variables('metadata').longName, 'rg')]",
              "name": "[format(variables('metadata').longName, 'apim')]",
              "location": "[parameters('location')]",
              "type": "[parameters('apiMgmtApiType')]",
              "nvName": "[parameters('apiMgmtNameValueName')]",
              "nvDisplayName": "[parameters('apiMgmtNameValueDisplayName')]",
              "nvValue": "[parameters('apiMgmtNameValueValue')]",
              "apiName": "[parameters('apiMgmtApiName')]",
              "displayName": "[parameters('apiMgmtApiDisplayName')]",
              "description": "[parameters('apiMgmtApiDescription')]",
              "path": "[parameters('apiMgmtApiPath')]",
              "subscriptionRequired": "[parameters('apiMgmtApiSubscriptionRequired')]",
              "format": "[parameters('apiMgmtApiFormat')]",
              "value": "[parameters('apiMgmtApiValue')]",
              "policyFormat": "[parameters('apiMgmtApiPolicyFormat')]",
              "policyValue": "[parameters('apiMgmtApiPolicyValue')]",
              "productName": "[parameters('apiMgmtProductName')]"
            },
            "operations": [
              {
                "name": "swagger-json",
                "displayName": "swagger.json",
                "method": "GET",
                "urlTemplate": "/swagger.json"
              },
              {
                "name": "swagger-ui",
                "displayName": "swagger/ui",
                "method": "GET",
                "urlTemplate": "/swagger/ui"
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service/namedValues",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', variables('apiManagement').name, variables('apiManagement').nvName)]",
              "properties": {
                "displayName": "[variables('apiManagement').nvDisplayName]",
                "secret": true,
                "value": "[variables('apiManagement').nvValue]"
              }
            },
            {
              "type": "Microsoft.ApiManagement/service/apis",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', variables('apiManagement').name, variables('apiManagement').apiName)]",
              "properties": {
                "type": "[variables('apiManagement').type]",
                "displayName": "[variables('apiManagement').displayName]",
                "description": "[variables('apiManagement').description]",
                "path": "[variables('apiManagement').path]",
                "subscriptionRequired": "[variables('apiManagement').subscriptionRequired]",
                "format": "[variables('apiManagement').format]",
                "value": "[variables('apiManagement').value]"
              }
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/policies",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/policy', format('{0}/{1}', variables('apiManagement').name, variables('apiManagement').apiName))]",
              "properties": {
                "format": "[variables('apiManagement').policyFormat]",
                "value": "[variables('apiManagement').policyValue]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', split(format('{0}/{1}', variables('apiManagement').name, variables('apiManagement').apiName), '/')[0], split(format('{0}/{1}', variables('apiManagement').name, variables('apiManagement').apiName), '/')[1])]"
              ]
            },
            {
              "copy": {
                "name": "apimapioperations",
                "count": "[length(variables('operations'))]"
              },
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', format('{0}/{1}', variables('apiManagement').name, variables('apiManagement').apiName), variables('operations')[copyIndex()].name)]",
              "properties": {
                "displayName": "[variables('operations')[copyIndex()].displayName]",
                "method": "[variables('operations')[copyIndex()].method]",
                "urlTemplate": "[variables('operations')[copyIndex()].urlTemplate]",
                "templateParameters": [],
                "responses": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', split(format('{0}/{1}', variables('apiManagement').name, variables('apiManagement').apiName), '/')[0], split(format('{0}/{1}', variables('apiManagement').name, variables('apiManagement').apiName), '/')[1])]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.ApiManagement/service/apis', split(format('{0}/{1}', variables('apiManagement').name, variables('apiManagement').apiName), '/')[0], split(format('{0}/{1}', variables('apiManagement').name, variables('apiManagement').apiName), '/')[1])]"
            },
            "name": {
              "type": "string",
              "value": "[format('{0}/{1}', variables('apiManagement').name, variables('apiManagement').apiName)]"
            },
            "path": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service/apis', split(format('{0}/{1}', variables('apiManagement').name, variables('apiManagement').apiName), '/')[0], split(format('{0}/{1}', variables('apiManagement').name, variables('apiManagement').apiName), '/')[1])).path]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "id": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'ApiManagementApi')).outputs.id.value]"
    },
    "name": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'ApiManagementApi')).outputs.name.value]"
    },
    "path": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'ApiManagementApi')).outputs.path.value]"
    }
  }
}